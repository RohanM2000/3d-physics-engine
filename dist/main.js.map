{"version":3,"file":"main.js","mappings":"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","sources":["webpack://3d_physics_engine/./src/scripts/matrix.js","webpack://3d_physics_engine/./src/scripts/rotations.js","webpack://3d_physics_engine/./src/scripts/vertex.js","webpack://3d_physics_engine/./src/scripts/floor.js","webpack://3d_physics_engine/./src/scripts/objects.js","webpack://3d_physics_engine/./src/scripts/constants.js","webpack://3d_physics_engine/./src/scripts/cube.js","webpack://3d_physics_engine/./src/scripts/vertextwo.js","webpack://3d_physics_engine/./src/scripts/render.js","webpack://3d_physics_engine/./src/scripts/camera.js","webpack://3d_physics_engine/./src/scripts/scene.js","webpack://3d_physics_engine/./src/scripts/background.js","webpack://3d_physics_engine/./src/scripts/pyramid.js","webpack://3d_physics_engine/./src/scripts/throttle_debounce.js","webpack://3d_physics_engine/./src/scripts/parsers.js","webpack://3d_physics_engine/./src/index.js"],"sourcesContent":["export default function Matrix (mat) {\n    this.values = mat;\n    this.lengthI = mat.length;\n    this.lengthJ = mat[0].length;\n}\n\nMatrix.prototype.multiply = function (matrix) {\n    const result = [];\n    for (let i = 0; i < this.lengthI; i++) {\n        const row = [];\n        for (let j = 0; j < matrix.lengthJ; j++) {\n            let sum = 0;\n            for (let k = 0; k < this.lengthJ; k++ ) {\n                sum += this.values[i][k] * matrix.values[k][j];\n            }\n            row.push(sum);\n        }\n        result.push(row);\n    }\n    return new Matrix(result);\n}\n\nMatrix.prototype.simplifyZeros = function () {\n    for (let i = 0; i < this.lengthI; i++) {\n        for (let j = 0; j < this.lengthJ; j++) {\n            if (Math.abs(this.values[i][j]) < 0.001) this.values[i][j] = 0;\n        }\n    }\n}\n\nMatrix.prototype.dupe = function() {\n    const mat = [];\n    // console.log(this);\n    for (let i = 0; i < this.lengthI; i++) {\n        // console.log(\"getting to this point!\")\n        mat.push(this.values[i].slice());\n        // console.log(mat);\n    }\n    return new Matrix(mat);\n}","import Matrix from \"./matrix.js\"\nexport function rotationX (radians) {\n    return new Matrix([\n        [1, 0, 0],\n        [0, Math.cos(radians), -Math.sin(radians)],\n        [0, Math.sin(radians), Math.cos(radians)]\n    ]);\n}\n\nexport function rotationY (radians) {\n    return new Matrix([\n        [Math.cos(radians), 0, Math.sin(radians)],\n        [0, 1, 0],\n        [-Math.sin(radians), 0, Math.cos(radians)]\n    ]);\n}\n\nexport function rotationZ (radians) {\n    return new Matrix([\n        [Math.cos(radians), -Math.sin(radians), 0],\n        [Math.sin(radians), Math.cos(radians), 0],\n        [0, 0, 1]\n    ]);\n}","import Matrix from \"./matrix.js\"\nimport * as ROTATIONS from \"./rotations.js\"\nexport default function Vertex (x, y, z) {\n    this.x = parseFloat(x);\n    this.y = parseFloat(y);\n    this.z = parseFloat(z);\n}\n\nVertex.prototype.move = function (x, y, z) {\n    this.x += x;\n    this.y += y;\n    this.z += z;\n}\n\nVertex.prototype.rotateX = function (theta) {\n    const rotMat = ROTATIONS.rotationX(theta);\n\n    const oldPos = new Matrix([\n        [this.x],\n        [this.y],\n        [this.z]\n    ])\n\n    const newPos = rotMat.multiply(oldPos);\n\n    this.x = newPos.values[0][0];\n    this.y = newPos.values[1][0];\n    this.z = newPos.values[2][0];\n}\n\nVertex.prototype.rotateY = function (theta) {\n    const rotMat = ROTATIONS.rotationY(theta);\n\n    const oldPos = new Matrix([\n        [this.x],\n        [this.y],\n        [this.z]\n    ])\n\n    const newPos = rotMat.multiply(oldPos);\n\n    this.x = newPos.values[0][0];\n    this.y = newPos.values[1][0];\n    this.z = newPos.values[2][0];\n}\n\nVertex.prototype.rotateZ = function (theta) {\n    const rotMat = ROTATIONS.rotationZ(theta);\n\n    const oldPos = new Matrix([\n        [this.x],\n        [this.y],\n        [this.z]\n    ])\n\n    const newPos = rotMat.multiply(oldPos);\n\n    this.x = newPos.values[0][0];\n    this.y = newPos.values[1][0];\n    this.z = newPos.values[2][0];\n}\n\nVertex.prototype.multiplyBy = function (matrix) {\n    const newVals = matrix.multiply(new Matrix([\n        [this.x],\n        [this.y],\n        [this.z]\n    ]));\n    // console.log(\"getting to this point\");\n    // console.log(newVals)\n    return new Vertex(newVals.values[0][0], newVals.values[1][0], newVals.values[2][0]);\n}\n\nVertex.prototype.dupe = function () {\n    return new Vertex(this.x, this.y, this.z);\n}","import Vertex from \"./vertex.js\";\nimport Objects from \"./objects.js\";\nimport Matrix from \"./matrix.js\";\nexport default function Floor () {\n    this.center = new Vertex(-350, 400, -1000);\n    this.velocity = new Vertex(0, 0, 0);\n    this.size = 0;\n    this.name = \"floor\";\n    this.rotations = new Matrix([\n        [1,0,0],\n        [0,1,0],\n        [0,0,1]\n    ]);\n    this.vertices = [\n        new Vertex(this.center.x + 50, this.center.y - 50, this.center.z),\n        new Vertex(this.center.x + 50, this.center.y + 50, this.center.z),\n        new Vertex(this.center.x - 50, this.center.y + 50, this.center.z),\n        new Vertex(this.center.x - 50, this.center.y - 50, this.center.z),\n    ];\n    this.faces = [\n        [this.vertices[0], this.vertices[1], this.vertices[2], this.vertices[3], \"black\"]\n    ];\n}\n\nfunction Surrogate () {\n\n};\n\nSurrogate.prototype = Objects.prototype;\n\nFloor.prototype = new Surrogate();\n\nFloor.prototype.dupe = function () {\n    const result = new Floor();\n    result.center = this.center.dupe();\n    // console.log(this.center.dupe());\n    result.rotations = this.rotations.dupe();\n    for (let i = 0; i < result.vertices.length; i++) {\n        result.vertices[i] = this.vertices[i].dupe();\n    }\n    // console.log(result);\n    this.fixFaces();\n    return result;\n};\n\nFloor.prototype.fixFaces = function () {\n    this.faces = [\n        [this.vertices[0], this.vertices[1], this.vertices[2], this.vertices[3], \"black\"]\n    ];\n};\n\nFloor.prototype.fall = function () {\n};\n\nFloor.prototype.jump = function () {\n};","import * as ROTATIONS from \"./rotations.js\"\nimport Matrix from \"./matrix.js\"\nimport Floor from \"./floor.js\"\nexport default function Objects () {\n\n}\n\nObjects.prototype.move = function (x, y, z) {\n    this.center.move(x, y, z);\n    for (let i = 0; i < this.vertices.length; i++) {\n        const vertex = this.vertices[i];\n        vertex.move(x, y, z);\n    }\n    // if (this instanceof Floor) {\n    //     console.log(this);\n    // }\n}\n\n\nObjects.prototype.absRotateX = function (theta) {\n    // const rotMatrix = ROTATIONS.rotationX(theta);\n    // const centMat = new Matrix([\n    //     [this.center.x],\n    //     [this.center.y],\n    //     [this.center.z]\n    // ]);\n    // const newCent = rotMatrix.multiply(centMat);\n    // this.center.x = newCent.values[0][0];\n    // this.center.y = newCent.values[1][0];\n    // this.center.z = newCent.values[2][0];\n    this.rotateX(theta);\n    this.center.rotateX(theta);\n    // this.velocity.rotateX(theta);\n    for (let i = 0; i < this.vertices.length; i++) {\n        // const oldPosMat = new Matrix([\n        //     [this.vertices[i].x],\n        //     [this.vertices[i].y],\n        //     [this.vertices[i].z]\n        // ]);\n        // const newPosMat = rotMatrix.multiply(oldPosMat);\n        // // [this.vertices[i].x, this.vertices[i].y, this.vertices[i].z] = newPosMat.values;\n        // this.vertices[i].x = newPosMat.values[0][0];\n        // this.vertices[i].y = newPosMat.values[1][0];\n        // this.vertices[i].z = newPosMat.values[2][0];\n        this.vertices[i].rotateX(theta);\n    }\n}\n\nObjects.prototype.absRotateY = function (theta) {\n    // const rotMatrix = ROTATIONS.rotationY(theta);\n    // const centMat = new Matrix([\n    //     [this.center.x],\n    //     [this.center.y],\n    //     [this.center.z]\n    // ]);\n    // const newCent = rotMatrix.multiply(centMat);\n    // this.center.x = newCent.values[0][0];\n    // this.center.y = newCent.values[1][0];\n    // this.center.z = newCent.values[2][0];\n    this.rotateY(theta);\n    this.center.rotateY(theta);\n    // this.velocity.rotateY(theta);\n    for (let i = 0; i < this.vertices.length; i++) {\n        // const oldPosMat = new Matrix([\n        //     [this.vertices[i].x],\n        //     [this.vertices[i].y],\n        //     [this.vertices[i].z]\n        // ]);\n        // const newPosMat = rotMatrix.multiply(oldPosMat);\n        // // [this.vertices[i].x, this.vertices[i].y, this.vertices[i].z] = newPosMat.values;\n        // this.vertices[i].x = newPosMat.values[0][0];\n        // this.vertices[i].y = newPosMat.values[1][0];\n        // this.vertices[i].z = newPosMat.values[2][0];\n        this.vertices[i].rotateY(theta);\n    }\n}\n\nObjects.prototype.absRotateZ = function (theta) {\n    // const rotMatrix = ROTATIONS.rotationZ(theta);\n    // const centMat = new Matrix([\n    //     [this.center.x],\n    //     [this.center.y],\n    //     [this.center.z]\n    // ]);\n    // const newCent = rotMatrix.multiply(centMat);\n    // this.center.x = newCent.values[0][0];\n    // this.center.y = newCent.values[1][0];\n    // this.center.z = newCent.values[2][0];\n    this.rotateZ(theta);\n    this.center.rotateZ(theta);\n    // this.velocity.rotateZ(theta);\n    for (let i = 0; i < this.vertices.length; i++) {\n        // const oldPosMat = new Matrix([\n        //     [this.vertices[i].x],\n        //     [this.vertices[i].y],\n        //     [this.vertices[i].z]\n        // ]);\n        // const newPosMat = rotMatrix.multiply(oldPosMat);\n        // // [this.vertices[i].x, this.vertices[i].y, this.vertices[i].z] = newPosMat.values;\n        // this.vertices[i].x = newPosMat.values[0][0];\n        // this.vertices[i].y = newPosMat.values[1][0];\n        // this.vertices[i].z = newPosMat.values[2][0];\n        this.vertices[i].rotateZ(theta);\n    }\n}\n\n// Objects.prototype.relRotateX = function (theta) {\n//     const rotMatrix = ROTATIONS.rotationX(theta);\n//     for (let i = 0; i < this.relVertices.length; i++) {\n//         const oldPosMat = new Matrix([\n//             [this.relVertices[i].x],\n//             [this.relVertices[i].y],\n//             [this.relVertices[i].z]\n//         ]);\n//         const newPosMat = rotMatrix.multiply(oldPosMat);\n//         [this.relVertices[i].x, this.relVertices[i].y, this.relVertices[i].z] = newPosMat.values;\n//         this.vertices[i].x -= oldPosMat[0];\n//         this.vertices[i].x += newPosMat[0];\n//         this.vertices[i].y -= oldPosMat[1];\n//         this.vertices[i].y += newPosMat[1];\n//         this.vertices[i].z -= oldPosMat[2];\n//         this.vertices[i].z += newPosMat[2];\n//     }\n// }\n// Objects.prototype.relRotateY = function (theta) {\n//     const rotMatrix = ROTATIONS.rotationY(theta);\n//     for (let i = 0; i < this.relVertices.length; i++) {\n//         const oldPosMat = new Matrix([\n//             [this.relVertices[i].x],\n//             [this.relVertices[i].y],\n//             [this.relVertices[i].z]\n//         ]);\n//         const newPosMat = rotMatrix.multiply(oldPosMat);\n//         [this.relVertices[i].x, this.relVertices[i].y, this.relVertices[i].z] = newPosMat.values;\n//     }\n// }\n// Objects.prototype.relRotateZ = function (theta) {\n//     const rotMatrix = ROTATIONS.rotationZ(theta);\n//     for (let i = 0; i < this.relVertices.length; i++) {\n//         const oldPosMat = new Matrix([\n//             [this.relVertices[i].x],\n//             [this.relVertices[i].y],\n//             [this.relVertices[i].z]\n//         ]);\n//         const newPosMat = rotMatrix.multiply(oldPosMat);\n//         [this.relVertices[i].x, this.relVertices[i].y, this.relVertices[i].z] = newPosMat.values;\n//     }\n// }\n\nObjects.prototype.checkCollision = function(obj) {\n    // if (Math.abs(this.center.z - obj.center.z) < (this.size/2 + obj.size/2) && !this.fixed) {\n    //     return \"Z\";\n    // }\n    // return false;\n    if (obj instanceof Floor) {\n        if ((this.center.z - this.size/2) < obj.center.z) {\n            return true;\n        }\n    }\n    if (Math.abs(this.center.z - obj.center.z) < (this.size/2 + obj.size/2)) {\n        if (obj instanceof Floor) {\n        return true;\n        } else {\n            // const right = obj.center.x + obj.size;\n            // const left = obj.center.x - obj.size;\n            // const top = obj.center.y + obj.size;\n            // const bottom = obj.center.y - obj.size;\n\n            // for (let i = 0; i < this.vertices.length; i++) {\n            //     const ele = this.vertices[i];\n            //     if (ele.x > left && ele.x < right && ele.y > bottom && ele.y < top) {\n            //         return true\n            //     }\n            // }\n            if (this.center.x === obj.center.x && this.center.y === obj.center.y) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nObjects.prototype.resolveCollisionZ = function(obj) {\n    if (this instanceof Floor && obj instanceof Floor) {\n        return false;\n    }\n    if (obj instanceof Floor) {\n        // const correction = obj.center.z - (this.center.z - this.size/2);\n        // this.move(0, 0, correction);\n        // this.acceleration = 0;\n        // this.velocity.z = 0;\n        // console.log(this);\n        // console.log(obj);\n        // this.fixed = true;\n        const correction = obj.center.z - (this.center.z - this.size/2);\n        this.move(0, 0, correction);\n        this.velocity.z = 0;\n    } else {\n        if ((this.center.z - this.size/2) > (obj.center.z - obj.size/2)) {\n            const correction = (obj.center.z + obj.size/2) - (this.center.z - this.size/2);\n            this.move(0, 0, correction);\n            this.velocity.z = 0;\n        } else {\n            const correction = (this.center.z + this.size/2) - (obj.center.z - obj.size/2);\n            obj.move(0, 0, correction);\n            obj.velocity.z = 0;\n        }\n    }\n}\n\nObjects.prototype.rotateX = function (theta) {\n    const rotMatrix = ROTATIONS.rotationX(theta);\n    this.rotations = rotMatrix.multiply(this.rotations);\n}\n\nObjects.prototype.rotateY = function (theta) {\n    const rotMatrix = ROTATIONS.rotationY(theta);\n    this.rotations = rotMatrix.multiply(this.rotations);\n}\n\nObjects.prototype.rotateZ = function (theta) {\n    const rotMatrix = ROTATIONS.rotationZ(theta);\n    // console.log(\"rotation matrix\", rotMatrix, \"current rotations\", this.rotations);\n    this.rotations = rotMatrix.multiply(this.rotations);\n}\n\nObjects.prototype.rotate = function () {\n    const dupe = this.dupe();\n    dupe.center = dupe.center.multiplyBy(dupe.rotations);\n    for (let i = 0; i < dupe.vertices.length; i++) {\n        // console.log(\"doing this!\")\n        dupe.vertices[i] = dupe.vertices[i].multiplyBy(dupe.rotations);\n    }\n    dupe.fixFaces();\n    return dupe;\n}\n\nObjects.prototype.jump = function (floorHeight) {\n    let xVel;\n    if (this.staticCenter.x > 0) {\n        xVel = 3;\n    } else {\n        xVel = 2;\n    }\n    let yVel;\n    if (this.staticCenter.y > 750) {\n        yVel = 1.2;\n    }else {\n        yVel = 0.8;\n    }\n    this.velocity.z += 15 + 3 * (this.center.z - floorHeight)/100 * xVel * yVel;\n    // this.velocity.z += this.center.x/10;\n}","export const GRAVITY = 0.7;","import Vertex from \"./vertex.js\"\nimport Objects from \"./objects.js\"\nimport Matrix from \"./matrix.js\"\nimport * as CONSTANTS from \"./constants.js\"\nexport default function Cube (center, size) {\n    this.velocity = new Vertex(0, 0, 0);\n    this.acceleration = new Vertex(0, 0, -CONSTANTS.GRAVITY);\n    this.size = size;\n    this.name = \"cube\";\n    const d = size / 2;\n    // this.relVertices = [\n    //     new Vertex(-d, -d, -d),\n    //     new Vertex( d, -d, -d),\n    //     new Vertex( d, -d,  d),\n    //     new Vertex(-d, -d,  d),\n    //     new Vertex( d,  d, -d),\n    //     new Vertex(-d,  d, -d),\n    //     new Vertex(-d,  d,  d),\n    //     new Vertex( d,  d,  d)\n    // ];\n    this.center = center;\n    this.staticCenter = new Vertex(this.center.x, this.center.y, this.center.z);\n    this.rotations = new Matrix([\n        [1,0,0],\n        [0,1,0],\n        [0,0,1]\n    ]);\n    this.vertices = [\n        new Vertex(center.x - d, center.y - d, center.z - d),\n        new Vertex(center.x + d, center.y - d, center.z - d),\n        new Vertex(center.x + d, center.y - d, center.z + d),\n        new Vertex(center.x - d, center.y - d, center.z + d),\n        new Vertex(center.x + d, center.y + d, center.z - d),\n        new Vertex(center.x - d, center.y + d, center.z - d),\n        new Vertex(center.x - d, center.y + d, center.z + d),\n        new Vertex(center.x + d, center.y + d, center.z + d)\n    ];\n    this.faces = [\n        [this.vertices[0], this.vertices[1], this.vertices[2], this.vertices[3], \"red\"],\n        [this.vertices[4], this.vertices[5], this.vertices[6], this.vertices[7], \"blue\"],\n        [this.vertices[1], this.vertices[4], this.vertices[7], this.vertices[2], \"green\"],\n        [this.vertices[5], this.vertices[0], this.vertices[3], this.vertices[6], \"orange\"],\n        [this.vertices[5], this.vertices[4], this.vertices[1], this.vertices[0], \"gray\"],\n        [this.vertices[3], this.vertices[2], this.vertices[7], this.vertices[6], \"purple\"]\n    ];\n}\n\nfunction Surrogate () {};\nSurrogate.prototype = Objects.prototype;\nCube.prototype = new Surrogate();\n\nCube.prototype.fall = function() {\n    this.velocity.move(this.acceleration.x, this.acceleration.y, this.acceleration.z);\n    // this.velocity.x -= zDir.x * CONSTANTS.GRAVITY;\n    // this.velocity.y -= zDir.y * CONSTANTS.GRAVITY;\n    // this.velocity.z -= zDir.z * CONSTANTS.GRAVITY;\n\n    this.move(this.velocity.x, this.velocity.y, this.velocity.z);\n}\n\nCube.prototype.dupe = function() {\n    const result = new Cube(this.center, this.size);\n    result.rotations = this.rotations.dupe();\n    for (let i = 0; i < 0; i++) {\n        result.vertices[i] = this.vertices[i].dupe();\n    }\n    // result.faces = [\n    //     [result.vertices[0], result.vertices[1], result.vertices[2], result.vertices[3], \"red\"],\n    //     [result.vertices[4], result.vertices[5], result.vertices[6], result.vertices[7], \"blue\"],\n    //     [result.vertices[1], result.vertices[4], result.vertices[7], result.vertices[2], \"green\"],\n    //     [result.vertices[5], result.vertices[0], result.vertices[3], result.vertices[6], \"orange\"],\n    //     [result.vertices[5], result.vertices[4], result.vertices[1], result.vertices[0], \"gray\"],\n    //     [result.vertices[3], result.vertices[2], result.vertices[7], result.vertices[6], \"purple\"]\n    // ];\n    return result;\n}\n\nCube.prototype.fixFaces = function() {\n    this.faces = [\n        [this.vertices[0], this.vertices[1], this.vertices[2], this.vertices[3], \"red\"],\n        [this.vertices[4], this.vertices[5], this.vertices[6], this.vertices[7], \"blue\"],\n        [this.vertices[1], this.vertices[4], this.vertices[7], this.vertices[2], \"green\"],\n        [this.vertices[5], this.vertices[0], this.vertices[3], this.vertices[6], \"orange\"],\n        [this.vertices[5], this.vertices[4], this.vertices[1], this.vertices[0], \"gray\"],\n        [this.vertices[3], this.vertices[2], this.vertices[7], this.vertices[6], \"purple\"]\n    ];\n}","export default function VertexTwo (x, y) {\n    this.x = parseFloat(x);\n    this.z = parseFloat(y);\n}","import VertexTwo from \"./vertextwo.js\"\nimport Floor from \"./floor.js\"\nfunction OrthoProject (M) {\n    return new VertexTwo(M.x, M.z);\n}\n\nfunction ProtoProject (M, d) {\n    return new VertexTwo(d * M.x / (M.y + d),d * M.z / (M.y + d));\n}\n\nfunction painterQuickSort (objects) {\n    if (objects.length <= 1) {\n        return objects;\n    }\n    const left = [];\n    const right = [];\n    const ob = objects[0];\n    // let tempMin = ob.vertices[0].y;\n    // for (let i = 1; i < ob.vertices.length; i++) {\n    //     if (ob.vertices[i] < tempMin) {\n    //         tempMin = ob.vertices[i];\n    //     }\n    // }\n    const mid = [ob];\n    for (let i = 1; i < objects.length; i++) {\n        const element = objects[i];\n        if (element.center.y < ob.center.y) {\n            right.push(element);\n        // } else if (element.center.y > ob.center.y){\n        } else {\n            left.push(element);\n        }\n        // } else {\n        //     let potentialMin = element.vertices[0];\n        //     for (let j = 0; j < element.vertices.length; j++) {\n        //         if (element.vertices[j] < potentialMin) {\n        //             potentialMin = element.vertices[j];\n        //         }\n        //     }\n            \n        //     if (potentialMin < tempMin) {\n        //         right.push(element);\n        //     } else {\n        //         left.push(element);\n        //     }\n        // }\n    }\n    const sortedLeft = painterQuickSort(left);\n    const sortedRight = painterQuickSort(right);\n\n    const newObjects = sortedLeft.concat(mid).concat(sortedRight);\n    return newObjects;\n}\n\n\n\nexport default function render(objects, ctx, distX, distY, d) {\n    const rotatedObjects = [];\n    for (let i = 0; i < objects.length; i++) {\n        rotatedObjects.push(objects[i].rotate());\n    }\n    // console.log(objects, rotatedObjects);\n    // console.log(rotatedObjects[2]);\n    // console.log(objects[2], rotatedObjects[2]);\n    const sortedObjects = painterQuickSort(rotatedObjects);\n    // console.log(sortedObjects);\n    for (let i = 0; i < sortedObjects.length; i++) {\n        // if (sortedObjects[i] instanceof Floor) {\n        //     console.log(sortedObjects[i]);\n        // }\n        // const sortedFaces = painterQuickSort(sortedObjects[i].faces);\n        if (sortedObjects[i].center.y > 100) {\n\n            const sortedFaces = sortedObjects[i].faces;\n            // console.log(sortedFaces);\n            for (let j = 0; j < sortedFaces.length; j++) {\n                const face = sortedFaces[j];\n                const avg = [0, 0];\n                const p = ProtoProject(face[0], d);\n                avg[0] += p.x;\n                avg[1] += p.z;\n                ctx.beginPath();\n                ctx.moveTo(p.x + distX, distY - p.z);\n                \n                for (let k = 1; k < face.length - 1; k++) {\n                    const p = ProtoProject(face[k], d);\n                    avg[0] += p.x;\n                    avg[1] += p.z;\n                    ctx.lineTo(p.x + distX, distY - p.z);\n                }\n                ctx.fillStyle = face[face.length - 1];\n                ctx.closePath();\n                \n                avg[0] = avg[0] / (face.length - 1);\n                avg[1] = avg[1] / (face.length - 1);\n                \n                \n                const r = ProtoProject(face[0], d);\n                const q = ProtoProject(face[1], d);\n                \n                const a = [r.x - avg[0], r.z - avg[1]];\n                const b = [q.x - avg[0], q.z - avg[1]];\n                \n                \n                if (a[0] *b[1] > a[1] *b[0]) {\n                    // console.log(face, sortedObjects[i].center, a, b);\n                    ctx.stroke();\n                    ctx.fill();\n                }\n                \n            }\n        }\n    }\n}\n\n","import Vertex from \"./vertex\";\n\nexport default function OrthoCamera (position, zTheta = 0, zPhi = 0, zOmega = 0) {\n    this.position = position;\n    this.zTheta = zTheta;\n    this.zPhi = zPhi;\n    this.zOmega = zOmega;\n}\n\nOrthoCamera.prototype.move = function(x, y, z) {\n    this.position.x += x;\n    this.position.y += y;\n    this.position.z += z;\n}\n\nOrthoCamera.prototype.turn = function(zTheta) {\n    this.zTheta += zTheta;\n}\n\nOrthoCamera.prototype.dip = function(zPhi) {\n    this.zPhi -= zPhi;\n}\n\nOrthoCamera.prototype.screw = function(zOmega) {\n    this.zOmega += zOmega;\n}\n\n// OrthoCamera.prototype.parse = function(options) {\n//     const result = new OrthoCamera(new Vertex(0, 0, 0));\n\n//     result.position.x = options.position.x;\n//     result.position.y = options.position.y;\n//     result.position.z = options.position.z;\n\n//     result.zTheta = options.zTheta;\n//     result.zPhi = options.zPhi;\n//     result.zOmega = options.zOmega;\n\n//     return result;\n// }","import Objects from \"./objects.js\"\nimport Camera from \"./camera.js\"\nimport Vertex from \"./vertex.js\"\nimport render from \"./render.js\"\nimport Floor from \"./floor.js\"\n\nexport default function Scene (camera, objects, background) {\n    this.camera = camera;\n    this.background = background;\n    this.x = new Vertex(1,0,0);\n    this.y = new Vertex(0,1,0);\n    this.z = new Vertex(0,0,1);\n    this.objects = [];\n    this.floors = [];\n\n    for (let i = 0; i < objects.length; i++) {\n        if (objects[i] instanceof Floor) {\n            this.floors.push(objects[i]);\n        } else {\n            this.objects.push(objects[i]);\n        }\n    }\n};\n\nScene.prototype.turn = function (zTheta) {\n    this.camera.turn(zTheta);\n    for (let i = 0; i < this.objects.length; i++) {\n        const element = this.objects[i];\n        // element.absRotateZ(-zTheta);\n        element.rotateZ(-zTheta);\n    }\n    for (let i = 0; i < this.floors.length; i++) {\n        const element = this.floors[i];\n        // element.absRotateZ(-zTheta);\n        element.rotateZ(-zTheta);\n    }\n    // this.background.absRotateZ(-zTheta);\n    this.x.rotateZ(-zTheta);\n    this.y.rotateZ(-zTheta);\n    this.z.rotateZ(-zTheta);\n};\n\nScene.prototype.dip = function (zPhi) {\n    this.camera.dip(zPhi)\n    for (let i = 0; i < this.objects.length; i++) {\n        const element = this.objects[i];\n        // element.absRotateX(zPhi);\n        element.rotateX(zPhi);\n    }\n    for (let i = 0; i < this.floors.length; i++) {\n        const element = this.floors[i];\n        // element.absRotateX(zPhi);\n        element.rotateX(zPhi);\n    }\n    // this.background.absRotateX(zPhi);\n    this.x.rotateX(zPhi);\n    this.y.rotateX(zPhi);\n    this.z.rotateX(zPhi);\n};\n\nScene.prototype.screw = function (zOmega) {\n    this.camera.dip(zOmega)\n    for (let i = 0; i < this.objects.length; i++) {\n        const element = this.objects[i];\n        // element.absRotateY(-zOmega);\n        element.rotateY(-zOmega);\n    }\n    for (let i = 0; i < this.floors.length; i++) {\n        const element = this.floors[i];\n        // element.absRotateY(-zOmega);\n        element.rotateY(-zOmega);\n    }\n    // this.background.absRotateY(-zOmega);\n    this.x.rotateY(-zOmega);\n    this.y.rotateY(-zOmega);\n    this.z.rotateY(-zOmega);\n};\n\nScene.prototype.move = function (x, y, z) {\n    this.camera.move(x, y, z);\n    for (let i = 0; i < this.objects.length; i++) {\n        const element = this.objects[i];\n        element.move(-x, -y, -z);\n    }\n    for (let i = 0; i < this.floors.length; i++) {\n        const element = this.floors[i];\n        element.move(-x, -y, -z);\n    }\n    // this.background.move(-x, -y, -z);\n};\n\nScene.prototype.fall = function () {\n    const allObjects = this.objects.concat(this.floors);\n    for (let i = 0; i < this.objects.length; i++) {\n        const obj = this.objects[i];\n        obj.fall();\n    }\n    for (let i = 0; i < allObjects.length - 1; i++) {\n        for (let j = i+1; j < allObjects.length; j++) {\n            if (allObjects[i].checkCollision(allObjects[j])) {\n                allObjects[i].resolveCollisionZ(allObjects[j]);\n            }\n        }\n    }\n};\n\nScene.prototype.jump = function (floorHeight) {\n    for (let i = 0; i < this.objects.length; i++) {\n        this.objects[i].jump(floorHeight);\n    }\n};\n\nScene.prototype.addObject = function (newObj) {\n    if (newObj instanceof Floor) {\n        this.floors.push(newObj);\n    } else {\n        this.objects.push(newObj);\n    }\n};\n\nScene.prototype.render = function (ctx, dx, dy, rendDist) {\n    render(this.floors, ctx, dx, dy, rendDist);\n    render(this.objects, ctx, dx, dy, rendDist);\n}\n\n// Scene.prototype.parse = function (options) {\n//     const camera = this.camera.parse(options['camera']);\n\n//     const result = new Scene(camera, [], this.background);\n\n//     // const objects = [];\n//     // const floors = [];\n\n    // result.x = new Vertex(options['x']['x'], options['x']['y'], options['x']['z']);\n    // result.y = new Vertex(options['y']['x'], options['y']['y'], options['y']['z']);\n    // result.z = new Vertex(options['z']['x'], options['z']['y'], options['z']['z']);\n\n//     for (let i = 0; i < options['objects'].length; i++) {\n//         // const ele = \n//     }\n\n// }","import Vertex from \"./vertex.js\";\nimport Objects from \"./objects.js\";\nimport Matrix from \"./matrix.js\";\nexport default function Background () {\n    this.center = new Vertex(0, 0, 0);\n    this.vertices = [\n        new Vertex(-5000, -5000, -5000),\n        new Vertex(5000, -5000, -5000),\n        new Vertex(5000, -5000, 5000),\n        new Vertex(-5000, -5000, 5000),\n        new Vertex(5000, 5000, -5000),\n        new Vertex(-5000, 5000, -5000),\n        new Vertex(-5000, 5000, 5000),\n        new Vertex(5000, 5000, 5000)\n    ];\n    this.rotations = new Matrix([\n        [1,0,0],\n        [0,1,0],\n        [0,0,1]\n    ])\n    this.faces = [\n        [this.vertices[0], this.vertices[1], this.vertices[2], this.vertices[3], \"gray\"],\n        [this.vertices[4], this.vertices[5], this.vertices[6], this.vertices[7], \"gray\"],\n        [this.vertices[1], this.vertices[4], this.vertices[7], this.vertices[2], \"lightblue\"],\n        [this.vertices[5], this.vertices[0], this.vertices[3], this.vertices[6], \"lightblue\"],\n        [this.vertices[5], this.vertices[4], this.vertices[1], this.vertices[0], \"black\"],\n        [this.vertices[3], this.vertices[2], this.vertices[7], this.vertices[6], \"black\"]\n    ];\n}\n\nfunction Surrogate () {};\nSurrogate.prototype = Objects.prototype;\nBackground.prototype = new Surrogate();","import Vertex from \"./vertex.js\"\nimport Objects from \"./objects.js\"\nimport Matrix from \"./matrix.js\"\nimport * as CONSTANTS from \"./constants.js\"\nexport default function Pyramid (center, size) {\n    this.velocity = new Vertex(0, 0, 0);\n    this.acceleration = new Vertex(0, 0, -CONSTANTS.GRAVITY);\n    this.size = size;\n    this.name = \"pyramid\";\n    const d = size / 2;\n    // this.relVertices = [\n    //     new Vertex(-d, -d, -d),\n    //     new Vertex( d, -d, -d),\n    //     new Vertex( d, -d,  d),\n    //     new Vertex(-d, -d,  d),\n    //     new Vertex( d,  d, -d),\n    //     new Vertex(-d,  d, -d),\n    //     new Vertex(-d,  d,  d),\n    //     new Vertex( d,  d,  d)\n    // ];\n    this.center = center;\n    this.staticCenter = new Vertex(this.center.x, this.center.y, this.center.z);\n    this.rotations = new Matrix([\n        [1,0,0],\n        [0,1,0],\n        [0,0,1]\n    ]);\n    this.vertices = [\n        new Vertex(center.x - d, center.y - d, center.z - d),\n        new Vertex(center.x + d, center.y - d, center.z - d),\n        new Vertex(center.x + d, center.y + d, center.z - d),\n        new Vertex(center.x - d, center.y + d, center.z - d),\n        new Vertex(center.x, center.y, center.z + d)\n    ];\n    this.faces = [\n        [this.vertices[0], this.vertices[3], this.vertices[2], this.vertices[1], \"red\"],\n        [this.vertices[0], this.vertices[1], this.vertices[4], \"blue\"],\n        [this.vertices[1], this.vertices[2], this.vertices[4], \"green\"],\n        [this.vertices[2], this.vertices[3], this.vertices[4], \"orange\"],\n        [this.vertices[0], this.vertices[4], this.vertices[3], \"gray\"]\n    ];\n}\n\nfunction Surrogate () {};\nSurrogate.prototype = Objects.prototype;\nPyramid.prototype = new Surrogate();\n\nPyramid.prototype.fall = function() {\n    this.velocity.move(this.acceleration.x, this.acceleration.y, this.acceleration.z);\n    // this.velocity.x -= zDir.x * CONSTANTS.GRAVITY;\n    // this.velocity.y -= zDir.y * CONSTANTS.GRAVITY;\n    // this.velocity.z -= zDir.z * CONSTANTS.GRAVITY;\n\n    this.move(this.velocity.x, this.velocity.y, this.velocity.z);\n}\n\nPyramid.prototype.dupe = function() {\n    const result = new Pyramid(this.center, this.size);\n    result.rotations = this.rotations.dupe();\n    for (let i = 0; i < 0; i++) {\n        result.vertices[i] = this.vertices[i].dupe();\n    }\n    // result.faces = [\n    //     [result.vertices[0], result.vertices[1], result.vertices[2], result.vertices[3], \"red\"],\n    //     [result.vertices[4], result.vertices[5], result.vertices[6], result.vertices[7], \"blue\"],\n    //     [result.vertices[1], result.vertices[4], result.vertices[7], result.vertices[2], \"green\"],\n    //     [result.vertices[5], result.vertices[0], result.vertices[3], result.vertices[6], \"orange\"],\n    //     [result.vertices[5], result.vertices[4], result.vertices[1], result.vertices[0], \"gray\"],\n    //     [result.vertices[3], result.vertices[2], result.vertices[7], result.vertices[6], \"purple\"]\n    // ];\n    return result;\n}\n\nPyramid.prototype.fixFaces = function() {\n    this.faces = [\n        [this.vertices[0], this.vertices[3], this.vertices[2], this.vertices[1], \"red\"],\n        [this.vertices[0], this.vertices[1], this.vertices[4], \"blue\"],\n        [this.vertices[1], this.vertices[2], this.vertices[4], \"green\"],\n        [this.vertices[2], this.vertices[3], this.vertices[4], \"orange\"],\n        [this.vertices[0], this.vertices[4], this.vertices[3], \"gray\"]\n    ];\n}","export function myThrottle (callback, time) {\n    let able = true;\n    return function (...args) {\n        if (able) {\n            callback(...args);\n            able = false;\n            setTimeout(()=> {\n                able = true;\n            }, time);\n        }\n    }\n}\n\nexport function myDebounce (callback, time) {\n    let able = 0;\n\n    return function (...args) {\n        able +=1;\n\n        setTimeout(()=> {\n            able -=1;\n\n            if (able === 0) {\n                callback(...args);\n            }\n        }, time);\n    }\n}","import OrthoCamera from \"./camera\";\nimport Vertex from \"./vertex.js\";\nimport Cube from \"./cube.js\";\nimport Pyramid from \"./pyramid.js\";\nimport Scene from \"./scene.js\";\nimport Background from \"./background\";\nimport Matrix from \"./matrix.js\"\nimport Floor from \"./floor\";\n\n\nfunction parseCamera (options) {\n    const result = new OrthoCamera(new Vertex(0, 0, 0));\n\n    result.position.x = options.position.x;\n    result.position.y = options.position.y;\n    result.position.z = options.position.z;\n\n    result.zTheta = options.zTheta;\n    result.zPhi = options.zPhi;\n    result.zOmega = options.zOmega;\n\n    return result;\n}\n\nfunction parseCube (options) {\n    const result = new Cube(new Vertex(0, 0, 0), options['size']);\n    result.move(options['center']['x'], options['center']['y'], options['center']['z']);\n    result.staticCenter.move(options['center']['x'], options['center']['y'], options['center']['z']);\n    result.rotations.values = options['rotations']['values'];\n    result.velocity.move(options['velocity']['x'], options['velocity']['y'], options['velocity']['z']);\n    result.fixFaces();\n\n    return result;\n}\n\nfunction parsePyramid (options) {\n    const result = new Pyramid(new Vertex(0, 0, 0), options['size']);\n    result.move(options['center']['x'], options['center']['y'], options['center']['z']);\n    result.staticCenter.move(options['center']['x'], options['center']['y'], options['center']['z']);\n    result.rotations.values = options['rotations']['values'];\n    result.velocity.move(options['velocity']['x'], options['velocity']['y'], options['velocity']['z']);\n    result.fixFaces();\n\n    return result;\n}\n\nfunction parseFloor (options) {\n    const result = new Floor();\n    result.move(options['center']['x'] + 350, options['center']['y'] - 400, options['center']['z'] + 1000);\n    result.rotations.values = options['rotations']['values'];\n    result.velocity.move(options['velocity']['x'], options['velocity']['y'], options['velocity']['z']);\n    result.fixFaces();\n\n    return result;\n}\n\nexport default function parseScene (options) {\n    const camera = parseCamera(options['camera']);\n\n    const scene = new Scene(camera, [], new Background());\n\n    for (let i = 0; i < options['floors'].length; i++) {\n        const floor = parseFloor(options['floors'][i]);\n        scene.addObject(floor);\n    }\n\n    for (let i = 0; i < options['objects'].length; i++) {\n        if (options['objects'][i]['name'] === 'cube') {\n            const obj = parseCube(options['objects'][i]);\n            scene.addObject(obj);\n        }\n        if (options['objects'][i]['name'] === 'pyramid') {\n            const obj = parsePyramid(options['objects'][i]);\n            scene.addObject(obj);\n        }\n    }\n\n    scene.x = new Vertex(options['x']['x'], options['x']['y'], options['x']['z']);\n    scene.y = new Vertex(options['y']['x'], options['y']['y'], options['y']['z']);\n    scene.z = new Vertex(options['z']['x'], options['z']['y'], options['z']['z']);\n\n    return scene;\n}","import Cube from \"./scripts/cube.js\"\nimport render from \"./scripts/render.js\"\nimport Vertex from \"./scripts/vertex.js\"\nimport Scene from \"./scripts/scene.js\"\nimport Camera from \"./scripts/camera.js\"\nimport Background from \"./scripts/background.js\"\nimport { renderBackground } from \"./scripts/render_background.js\"\nimport Floor from \"./scripts/floor.js\"\nimport Matrix from \"./scripts/matrix.js\"\nimport Pyramid from \"./scripts/pyramid.js\"\nimport * as TB from \"./scripts/throttle_debounce.js\"\nimport parseScene from \"./scripts/parsers.js\"\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n    // const canvas = document.createElement(\"canvas\");\n    // canvas.width = 600;\n    // canvas.height = 600;\n    // document.body.appendChild(canvas);\n    const canvas = document.getElementById(\"3d-canvas\")\n    const ctx = canvas.getContext(\"2d\");\n    \n    // const cube = new Cube(new Vertex(50,500,-100), 100);\n    // const cube2 = new Cube(new Vertex(-50,500,-200), 100);\n    // const pyramid = new Pyramid(new Vertex(-50, 500, 400), 100);\n    // const cube3 = new Cube(new Vertex(50, 500, 300), 100);\n    const background = new Background();\n    // const floor = new Floor();\n    // const floor2 = new Floor();\n    // floor2.move(0, 100, 0);\n    // const floor3 = new Floor();\n    // floor3.move(0, 200, 0);\n    // const floor4 = new Floor();\n    // floor4.move(0, 300, 0);\n\n    // const cube2 = new Cube(new Vertex(100,100,100), 100);\n\n    // cube.relRotateX(Math.PI/4);\n    // render([cube], ctx,  300, 300);\n    let camera = new Camera(new Vertex(0, 0, 0), 0);\n    let scene = new Scene(camera, [], background);\n    function animate (scene) {\n        if (ready) {\n            requestAnimationFrame(()=>animate(scene));\n        }\n        // console.log(scene);\n        ctx.clearRect(0, 0, 600, 600);\n        ctx.fillStyle = \"lightblue\";\n        ctx.fillRect(0, 0, 600, 600);\n        // cube.relRotateX(0.1);\n        // cube.relRotateY(0.1);\n        // cube.relRotateZ(0.1);\n        // scene.turn(0.1);\n        // cube.absRotateY(0.1);\n        // renderBackground(background, ctx, 300, 300, 10000);\n        // cube.fall();\n        // cube3.fall();\n        scene.fall();\n        // render(floors, ctx, 300, 300, 200);\n        // render(objs, ctx, 300, 300, 200);\n        scene.render(ctx, 300, 300, 200);\n    }\n    document.addEventListener(\"keydown\", (event)=>{\n        // console.log(cube.center);\n        // console.log(cube2.center);\n        // console.log(cube.vertices);\n        // console.log(cube2.vertices);\n        if (event.key === \"a\") {\n            scene.turn(0.2);\n        }\n        if (event.key === \"d\") {\n            scene.turn(-0.2);\n        }\n        if (event.key === \"w\") {\n            scene.dip(-0.2);\n        }\n        if (event.key === \"s\") {\n            scene.dip(0.2);\n        }\n        if (event.key === \"q\") {\n            scene.screw(-0.2);\n        }\n        if (event.key === \"e\") {\n            scene.screw(0.2);\n        }\n        // console.log(event.key);\n        if (event.key === \"ArrowUp\") {\n            scene.move(0, 0, 10);\n        }\n        if (event.key === \"ArrowDown\") {\n            scene.move(0, 0, -10);\n        }\n        if (event.key === \"ArrowLeft\") {\n            scene.move(-10, 0, 0);\n        }\n        if (event.key === \"ArrowRight\") {\n            scene.move(10, 0, 0);\n        }\n        if (event.key === \"r\") {\n            scene.move(0, 10, 0);\n        }\n        if (event.key === \"f\") {\n            scene.move(0, -10, 0);\n        }\n        // if (event.key === \"o\") {\n        //     scene.jump();\n        // }\n        // console.log(cube3.rotate(), cube.rotate());\n        \n        // animate();\n        // console.log(cube.center, cube.rotations.multiply(new Matrix([\n            //     [cube.staticCenter.x],\n            //     [cube.staticCenter.y],\n            //     [cube.staticCenter.z]\n        // ])), cube.rotate().center, cube.center.multiplyBy(cube.rotations));\n        // console.log(cube.faces, cube.rotate().faces, \"faces\");\n        // console.log(cube.vertices, cube.rotate().vertices, \"faces\");\n        // console.log(floor);\n    });\n    const shake = document.getElementById(\"shake\");\n    shake.addEventListener(\"click\", (event)=> {\n        scene.jump(scene.floors[0].center.z);\n    });\n    const answers = document.querySelector(\"div.answers\");\n    const proj = document.getElementById(\"proj\");\n    \n    function questionButton(ele) {\n        const children = answers.children;\n        \n        for (let i = 0; i < children.length; i++) {\n            children[i].remove();\n        }\n\n        answers.appendChild(ele);\n    }\n    \n    const throttleButton = TB.myThrottle(questionButton, 2000);\n    \n    proj.addEventListener(\"click\", (event)=> {\n        const ele = document.createElement(\"p\");\n        ele.innerText = \"Projections are mappings of 3d objects to a 2d plane. Think of the shadow of a cube. As you rotate that cube, the shadow will change as well. That is the principle that drives 3d engines.\";\n        // answers.appendChild(ele);\n        throttleButton(ele);\n    });\n    \n    const rot = document.getElementById(\"rot\");\n    \n    rot.addEventListener(\"click\", (event)=> {\n        const ele = document.createElement(\"p\");\n        ele.innerText = \"Rotations work by leveraging trigonometry to change the positions of vertices on each object, and then rendering from the new positions.\";\n        // answers.appendChild(ele);\n        throttleButton(ele);\n    });\n    \n    const what = document.getElementById(\"what\");\n    \n    what.addEventListener(\"click\", (event)=> {\n        const ele = document.createElement(\"p\");\n        ele.innerText = \"This engine is made with 2d canvas and a simple physics engine made from scratch that considers every object a non-rotational hard body. To read more about the underlying math concepts \";\n        // answers.appendChild(ele);\n        const a = document.createElement(\"a\");\n        a.innerText = \"click me.\";\n        a.href = \"https://en.wikipedia.org/wiki/Rotation_matrix\";\n        a.target = \"_blank\";\n        a.rel = \"noopener noreferrer\";\n        ele.append(a);\n        throttleButton(ele);\n    });\n\n    const items = document.querySelector(\"div.add-items\");\n    items.dataset.Shape = \"none\";\n    for (let i = 0; i < 64; i++) {\n        const tempButton = document.createElement(\"button\");\n        tempButton.dataset.Id = i;\n        tempButton.dataset.Finish = \"false\";\n        items.appendChild(tempButton);\n        const floor = new Floor();\n        const row = Math.floor(i / 8);\n        const col = i % 8;\n        \n        floor.move(col* 100, row * 100, 0);\n        \n        // floors.push(floor);\n        // scene.objects.push(floor);\n        scene.addObject(floor);\n        \n    }\n    scene.move(0, 0, -500);\n    scene.move(0, -100, 0);\n    scene.dip(0.2);\n    // console.log(floors);\n    function addObj(tempObj) {\n        // objs.push(tempObj);\n        // scene.objects.unshift(tempObj);\n        scene.addObject(tempObj);\n    }\n\n    const debObj = TB.myDebounce(addObj, 300);\n    items.addEventListener(\"click\", (event)=> {\n        // console.log(floors);\n        // console.log(event.currentTarget.dataset.Shape);\n        const id = event.target.dataset.Id;\n        // console.log(id);\n        const row = Math.floor(id / 8);\n        const col = id % 8;\n        let newObj;\n        if (event.target.dataset.Finish === \"true\") {\n            alert(\"Cannot place objects on top of pyramid, will cause unstable structure.\");\n        } else {\n            if (event.currentTarget.dataset.Shape === \"cube\") {\n                newObj = new Cube(new Vertex(-350 + 100 * col, 1100 - 100 * row, 1000), 100);\n                newObj.move(-scene.camera.position.x, -scene.camera.position.y, -scene.camera.position.z);\n                newObj.rotations = scene.floors[0].rotations;\n                debObj(newObj);\n            }else if (event.currentTarget.dataset.Shape === \"pyramid\") {\n                // console.log(\"PYRMID STUCK\");\n                newObj = new Pyramid(new Vertex(-350 + 100 * col, 1100 - 100 * row, 1000), 100);\n                newObj.move(-scene.camera.position.x, -scene.camera.position.y, -scene.camera.position.z);\n                newObj.rotations = scene.floors[0].rotations;\n                debObj(newObj);\n\n                event.target.dataset.Finish = \"true\";\n            } else {\n                alert(\"Please select a shape.\");\n            }\n        }\n        // objs.push(newObj);\n        // scene.objects.unshift(newObj);\n        // console.log(newObj);\n        // console.log(floors);\n    });\n\n\n    const cubeButton = document.getElementById(\"cube\");\n    const pyrButton = document.getElementById(\"pyramid\");\n\n    cubeButton.addEventListener(\"click\", (event)=> {\n        // console.log(\"cube\");\n        items.dataset.Shape = \"cube\";\n        cubeButton.classList.add(\"selected\");\n        pyrButton.classList.remove(\"selected\");\n    });\n\n    pyrButton.addEventListener(\"click\", (event)=> {\n        // console.log(\"pyramid\");\n        items.dataset.Shape = \"pyramid\";\n        pyrButton.classList.add(\"selected\");\n        cubeButton.classList.remove(\"selected\");\n    });\n\n    const newButton = document.getElementById(\"new\");\n    const saveButton = document.getElementById(\"save\");\n    const loadButton = document.getElementById(\"load\");\n\n    newButton.addEventListener(\"click\", (event)=> {\n        // console.log(\"new\");\n        ready = false;\n        camera = new Camera(new Vertex(0, 0, 0), 0);\n        scene = new Scene(camera, [], background);\n        for (let i = 0; i < 64; i++) {\n            const floor = new Floor();\n            const row = Math.floor(i / 8);\n            const col = i % 8;\n            \n            floor.move(col* 100, row * 100, 0);\n            \n            // floors.push(floor);\n            // scene.objects.push(floor);\n            scene.addObject(floor);\n        }\n        scene.move(0, 0, -500);\n        scene.move(0, -100, 0);\n        scene.dip(0.2);\n\n        const children = items.children;\n\n        for (let i = 0; i < children.length; i++) {\n            children[i].dataset.Finish = \"false\";\n        }\n\n        ready = true;\n        animate(scene);\n\n    });\n    saveButton.addEventListener(\"click\", (event)=> {\n        // console.log(\"save\");\n        const finishArray = [];\n\n        const children = items.children;\n\n        for (let i =0; i < children.length; i++) {\n            finishArray.push(children[i].dataset.Finish);\n        }\n        localStorage.setItem(\"scene\", JSON.stringify(scene));\n        localStorage.setItem(\"finishArray\", JSON.stringify(finishArray));\n    });\n    loadButton.addEventListener(\"click\", (event)=> {\n        // console.log(\"load\");\n        ready = false;\n        // scene = JSON.parse(localStorage.getItem(\"scene\"));\n        const newScene = JSON.parse(localStorage.getItem(\"scene\"));\n        const finishArray = JSON.parse(localStorage.getItem(\"finishArray\"));\n        // camera = newScene.camera;\n        // scene = newScene;\n        // camera.position.x = newScene.camera.position.x;\n        // camera.position.y = newScene.camera.position.y;\n        // camera.position.z = newScene.camera.position.z;\n        // camera.zOmega = newScene.camera.zOmega;\n        // camera.zPhi = newScene.camera.zPhi;\n        // camera.zTheta = newScene.camera.zTheta;\n\n        // for (let i = 0; i < newScene.floors.length; i++) {\n        //     const floor = new Floor();\n\n        // }\n\n        scene = parseScene(newScene);\n        const children = items.children;\n\n        for (let i = 0; i < children.length; i++) {\n            children[i].dataset.Finish = finishArray[i];\n        }\n        // console.log(scene);\n\n        ready = true;\n        animate(scene);\n        // ready = true;\n\n        // animate(scene);\n        // ready = true;\n        // animate();\n        // console.log(localStorage.getItem(\"scene\"));\n    });\n\n    const quoteBody = document.querySelector(\"div.quote\");\n    const button2 = document.createElement(\"button\");\n    button2.innerText = \"New Fact!\";\n    quoteBody.appendChild(button2);\n    async function generateQuote() { \n        try {\n            button2.toggleAttribute(\"hidden\");\n            const factData = await fetch(\"https://api.api-ninjas.com/v1/facts\", {\n                headers: {\n                    \"X-Api-Key\": \"SlsDFWMrQ84X1Z35oeeXnQ==GA3AUhPqul7zmRE4\"\n                }\n            });\n            // console.log(factData.json());\n            if (factData.ok) {\n                const fact = await factData.json();\n                console.log(fact[0]['fact']);\n                \n                quoteBody.children[0].innerText = fact[0]['fact'];\n\n                await setTimeout(()=> quoteBody.children[1].toggleAttribute(\"hidden\"), 3000);\n            } else {\n                throw factData;\n            }\n        } catch (errorResponse) {\n            console.log(errorResponse);\n            quoteBody.children[0].innerText = \"Cannot load fact.\"\n        }\n    }\n    generateQuote();\n\n    const throttleQuote = TB.myThrottle(generateQuote, 3000);\n\n    button2.addEventListener(\"click\", throttleQuote);\n\n    let ready = true;\n    animate(scene);\n})"],"names":["Matrix","mat","this","values","lengthI","length","lengthJ","rotationX","radians","Math","cos","sin","rotationY","rotationZ","Vertex","x","y","z","parseFloat","Floor","center","velocity","size","name","rotations","vertices","faces","Surrogate","Objects","prototype","multiply","matrix","result","i","row","j","sum","k","push","simplifyZeros","abs","dupe","slice","move","rotateX","theta","rotMat","ROTATIONS","oldPos","newPos","rotateY","rotateZ","multiplyBy","newVals","fixFaces","fall","jump","absRotateX","absRotateY","absRotateZ","checkCollision","obj","resolveCollisionZ","correction","rotMatrix","rotate","floorHeight","xVel","yVel","staticCenter","GRAVITY","Cube","acceleration","CONSTANTS","d","VertexTwo","ProtoProject","M","painterQuickSort","objects","left","right","ob","mid","element","sortedLeft","sortedRight","concat","render","ctx","distX","distY","rotatedObjects","sortedObjects","sortedFaces","face","avg","p","beginPath","moveTo","lineTo","fillStyle","closePath","r","q","a","b","stroke","fill","OrthoCamera","position","zTheta","arguments","undefined","zPhi","zOmega","Scene","camera","background","floors","Background","Pyramid","myThrottle","callback","time","able","setTimeout","parseCube","options","parsePyramid","parseFloor","turn","dip","screw","allObjects","addObject","newObj","dx","dy","rendDist","document","addEventListener","event","getElementById","getContext","Camera","scene","animate","ready","requestAnimationFrame","clearRect","fillRect","key","answers","querySelector","proj","throttleButton","TB","ele","children","remove","appendChild","createElement","innerText","href","target","rel","append","items","dataset","Shape","tempButton","Id","Finish","floor","col","debObj","_len","args","Array","_key","tempObj","id","alert","currentTarget","cubeButton","pyrButton","classList","add","newButton","saveButton","loadButton","finishArray","localStorage","setItem","JSON","stringify","newScene","parse","getItem","parseCamera","parseScene","quoteBody","button2","async","generateQuote","toggleAttribute","factData","fetch","headers","ok","fact","json","console","log","errorResponse","throttleQuote"],"sourceRoot":""}